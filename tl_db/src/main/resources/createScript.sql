START TRANSACTION
DROP TABLE IF EXISTS artist;
DROP TABLE IF EXISTS participation;
DROP TABLE IF EXISTS show;
DROP TABLE IF EXISTS performance;
DROP TABLE IF EXISTS room;
DROP TABLE IF EXISTS location;
DROP TABLE IF EXISTS seat;
DROP TABLE IF EXISTS ticket;
DROP TABLE IF EXISTS reservation;
DROP TABLE IF EXISTS customer;
DROP TABLE IF EXISTS purchase;
DROP TABLE IF EXISTS orderitem;
DROP TABLE IF EXISTS article;
DROP TABLE IF EXISTS news;
DROP TABLE IF EXISTS employee;
COMMIT

START TRANSACTION

CREATE TABLE article (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	price UNSIGNED INTEGER NOT NULL,
	title VARCHAR(255) NOT NULL,
	description TEXT DEFAULT NULL,
	available UNSIGNED INTEGER NOT NULL,
	show_id INTEGER NOT NULL,

	FOREIGN KEY(show_id) REFERENCES show(id),

	PRIMARY KEY(id)
);

CREATE TABLE artist (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	
	firstname VARCHAR(255) DEFAULT NULL,
	lastname VARCHAR(255) DEFAULT NULL,
	description TEXT DEFAULT NULL,
	
	PRIMARY KEY(id)
);

CREATE TABLE customer (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	customer_number VARCHAR(255) NOT NULL UNIQUE,
	firstname VARCHAR(255) NOT NULL,
	lastname VARCHAR(255) NOT NULL,
	date_of_birth DATE DEFAULT NULL,
	sex CHAR(1) DEFAULT NULL,
	email VARCHAR(255) DEFAULT NULL,
	telephone VARCHAR(255) DEFAULT NULL,

	PRIMARY KEY(id)
);

CREATE TABLE employee (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	firstname VARCHAR(255) NOT NULL,
	lastname VARCHAR(255) NOT NULL,
	date_of_birth DATE DEFAULT NULL,
	sex VARCHAR(255) DEFAULT NULL,
	username VARCHAR(255) NOT NULL,
	password VARCHAR(511) NOT NULL,
	failed_logins UNSIGNED INTEGER NOT NULL DEFAULT 0,
	last_time_logged_in DATE NOT NULL,

	PRIMARY KEY(id)
);

CREATE TABLE location (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	
	title VARCHAR(255) NOT NULL,
	description TEXT DEFAULT NULL,
	street VARCHAR(255) DEFAULT NULL,
	postcode VARCHAR(255) DEFAULT NULL,
	city VARCHAR(255) DEFAULT NULL,
	country VARCHAR(255) DEFAULT NULL,

	PRIMARY KEY(id)
);

CREATE TABLE news (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	title VARCHAR(255) NOT NULL,
	description TEXT NOT NULL,
	created_on DATE NOT NULL

	PRIMARY KEY(id)
);

CREATE TABLE purchase (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	order_number STRING NOT NULL UNIQUE,
	customer_id INTEGER DEFAULT NULL,
	ordered_at DATETIME NOT NULL,
	method_of_payment VARCHAR(255) NOT NULL,
	payment_reference VARCHAR(255) DEFAULT NULL,
	price_total UNSIGNED INTEGER NOT NULL,
	delivery_street VARCHAR(255) DEFAULT NULL,
	delivery_postcode VARCHAR(255) DEFAULT NULL,
	delivery_city VARCHAR(255) DEFAULT NULL,
	delivery_country VARCHAR(255) DEFAULT NULL,
	billing_street VARCHAR(255) DEFAULT NULL,
	billing_postcode VARCHAR(255) DEFAULT NULL,
	billing_city VARCHAR(255) DEFAULT NULL,
	billing_country VARCHAR(255) DEFAULT NULL,

	FOREIGN KEY(customer_id) REFERENCES customer(id),	

	PRIMARY KEY(id)
);

CREATE TABLE orderitem (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	article_id INTEGER DEFAULT NULL,
	ticket_id INTEGER DEFAULT NULL,

	price_unit UNSIGNED INTEGER NOT NULL,
	title VARCHAR(255) NOT NULL,
	amount UNSIGNED INTEGER NOT NULL,

	FOREIGN KEY(ticket_id) REFERENCES ticket(id),
	FOREIGN KEY(article_id) REFERENCES article(id),	

	PRIMARY KEY(id)
);

CREATE TABLE participation (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	artist_id INTEGER NOT NULL,
	performance_id INTEGER NOT NULL,
	artistrole VARCHAR(255) DEFAULT NULL,

	FOREIGN KEY(artist_id) REFERENCES artist(id),
	FOREIGN KEY(perf_id) REFERENCES performance(id),

	PRIMARY KEY(id)
);

CREATE TABLE performance (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	show_id INTEGER NOT NULL,
	room_id INTEGER NOT NULL,
	starts_at DATETIME NOT NULL,
	duration UNSIGNED INTEGER DEFAULT NULL,

	FOREIGN KEY(show_id) REFERENCES show(id),
	FOREIGN KEY(room_id) REFERENCES room(id),

	PRIMARY KEY(id)
);

CREATE TABLE reservation (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	customer_id INTEGER NOT NULL,

	reservation_number VARCHAR(255) NOT NULL,

	FOREIGN KEY(customer_id) REFERENCES customer(id),

	PRIMARY KEY(id)
);

CREATE TABLE room (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	location_id INTEGER NOT NULL,
	title VARCHAR(255) NOT NULL,

	FOREIGN KEY(location_id) REFERENCES location(id),

	PRIMARY KEY(id)
);

CREATE TABLE seat (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	room_id INTEGER NOT NULL,
	seat_number STRING NOT NULL,
	row UNSIGNED INTEGER NOT NULL,
	col UNSIGNED INTEGER NOT NULL,

	FOREIGN KEY(room_id) REFERENCES room(id),

	PRIMARY KEY(id)
);

CREATE TABLE show (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	
	title VARCHAR(255) NOT NULL,
	description TEXT DEFAULT NULL,

	PRIMARY KEY(id)
);

CREATE TABLE ticket (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,

	seat_id INTEGER NOT NULL,
	performance_id INTEGER NOT NULL,
	reservation_id INTEGER DEFAULT NULL,
	price INTEGER NOT NULL,
	category VARCHAR(255) NOT NULL,
	ticket_number VARCHAR(255) NOT NULL,

	FOREIGN KEY(seat_id) REFERENCES seat(id),
	FOREIGN KEY(performance_id) REFERENCES performance(id),
	FOREIGN KEY(reservation_id) REFERENCES reservation(id),

	PRIMARY KEY(id)
);
COMMIT
